<?xml version="1.0" encoding="UTF-8"?>

<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:jdbc="http://www.springframework.org/schema/jdbc"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:lang="http://www.springframework.org/schema/lang"
       xsi:schemaLocation="http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.0.xsd
             http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
             http://www.springframework.org/schema/jdbc http://www.springframework.org/schema/jdbc/spring-jdbc-3.0.xsd
             http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
             http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.0.xsd http://www.springframework.org/schema/lang http://www.springframework.org/schema/lang/spring-lang.xsd">

    <context:property-placeholder location="classpath:prjcfg.properties"/>

    <!-- 配置数据库连接池 -->
    <bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close">
        <property name="driverClassName" value="${pub.platform.db.ConnectionManager.sDBDriver}"/>
        <property name="url" value="${pub.platform.db.ConnectionManager.sConnStr}"/>
        <property name="username" value="${pub.platform.db.ConnectionManager.user}"/>
        <property name="password" value="${pub.platform.db.ConnectionManager.passwd}"/>
        <property name="maxActive" value="15"/>
        <property name="maxIdle" value="5"/>
    </bean>


    <!-- transaction manager, use JtaTransactionManager for global tx -->
    <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dataSource"/>
    </bean>


    <!-- enable component scanning (beware that this does not enable mapper scanning!) -->
    <context:component-scan base-package="fis,skyline,gateway"/>

    <!-- enable autowire -->
    <context:annotation-config/>

    <!--<tx:jta-transaction-manager />-->

    <!-- enable transaction demarcation with annotations -->
    <tx:annotation-driven/>

    <!-- define the SqlSessionFactory, notice that configLocation is not needed when you use MapperFactoryBean -->
    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <property name="dataSource" ref="dataSource"/>
        <property name="mapperLocations">
            <list>
                <value>classpath:fis/repository/fs/mapper/**/*.xml</value>
                <value>classpath:skyline/repository/mapper/**/*.xml</value>
                <value>classpath:fis/repository/gwk/mapper/**/*.xml</value>
                <value>classpath:fis/repository/pay/mapper/**/*.xml</value>
            </list>
        </property>
    </bean>

    <!-- scan for mappers and let them be autowired -->
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <property name="basePackage"
                  value="skyline.repository.dao,fis.repository.fs.dao,fis.repository.gwk.dao,fis.repository.pay.dao"/>
    </bean>

    <!--quartz-->
    <!-- 1 自动导入总行文件-->
    <!--要调用的工作类-->
    <bean id="autoIMPBankFile" class="gateway.ftp.pfbank.DoTimeAutoIMPHandler"></bean>
    <!--定义调用对象和调用对象的方法-->
    <bean id="autoIMPBankFileJob" class="org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean">
        <property name="targetObject">
            <ref bean="autoIMPBankFile"/>
        </property>
        <property name="targetMethod">
            <value>execute</value>
        </property>
    </bean>
    <!--定义触发时间-->
    <bean id="doTimeForIMP" class="org.springframework.scheduling.quartz.CronTriggerBean">
        <property name="jobDetail" ref="autoIMPBankFileJob"/>
        <property name="cronExpression" value="0 30 9 * * ?"/>
    </bean>

    <!--2 自动导出还款文件-->
    <bean id="autoEXPBankFile" class="gateway.ftp.pfbank.DoTimeAutoEXPHandler"/>
    <bean id="autoEXPBankFileJob" class="org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean">
        <property name="targetObject">
            <ref bean="autoEXPBankFile"/>
        </property>
        <property name="targetMethod">
            <value>execute</value>
        </property>
    </bean>
    <bean id="doTimeForEXP" class="org.springframework.scheduling.quartz.CronTriggerBean">
        <property name="jobDetail" ref="autoEXPBankFileJob"/>
        <property name="cronExpression" value="0 30 16 * * ?"/>
    </bean>

    <!--3 自动发送卡\消费信息至财政-->
    <!--
    <bean id="autoSendToFinorg" class="fis.batch.autosend.SendHandler"/>
    <bean id="autoSendToFinorgJob" class="org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean">
        <property name="targetObject">
            <ref bean="autoSendToFinorg"/>
        </property>
        <property name="targetMethod">
            <value>execute</value>
        </property>
    </bean>

    <bean id="doTimeForSendToFinorg" class="org.springframework.scheduling.quartz.CronTriggerBean">
        <property name="jobDetail" ref="autoSendToFinorgJob"/>
        <property name="cronExpression" value="0 0/5 10 * * ?"/>
    </bean>
    -->

    <!-- 总管理类 如果将lazy-init='false'那么容器启动就会执行调度程序  -->
    <!--
    <bean id="myscheduler" class="org.springframework.scheduling.quartz.SchedulerFactoryBean">
        <property name="triggers">
            <list>
                <ref bean="doTimeForIMP"/>
                <ref bean="doTimeForEXP"/>
                <ref bean="doTimeForSendToFinorg"/>
            </list>
        </property>

    </bean>
    -->
    <bean id="gwk266001elementService" class="org.springframework.remoting.caucho.BurlapProxyFactoryBean">
        <property name="serviceUrl" value="${fbifis.endpoint.url.gwk.266001.elementservice}"/>
        <property name="serviceInterface" value="gateway.txn.t266001.gwk.ElementService"/>
    </bean>
    <bean id="gwk266001bankService" class="org.springframework.remoting.caucho.BurlapProxyFactoryBean">
        <property name="serviceUrl" value="${fbifis.endpoint.url.gwk.266001.bankservice}"/>
        <property name="serviceInterface" value="gateway.txn.t266001.gwk.BankService"/>
    </bean>
    <bean id="gwk266001commonQueryService" class="org.springframework.remoting.caucho.BurlapProxyFactoryBean">
        <property name="serviceUrl" value="${fbifis.endpoint.url.gwk.266001.commonqueryservice}"/>
        <property name="serviceInterface" value="gateway.txn.t266001.gwk.CommonQueryService"/>
    </bean>

    <bean id="gwk266061elementService" class="org.springframework.remoting.caucho.BurlapProxyFactoryBean">
        <property name="serviceUrl" value="${fbifis.endpoint.url.gwk.266061.elementservice}"/>
        <property name="serviceInterface" value="gateway.txn.t266001.gwk.ElementService"/>
    </bean>
</beans>
